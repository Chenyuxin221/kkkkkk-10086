# 触发条件：当代码被推送到仓库时
on:
  push:
    # 触发的分支：仅当推送到 master 分支时触发
    branches:
      - master
    # 涉及以下路径文件的更改不会触发工作流
    paths-ignore:
      - LICENSE
      - README.md

# 工作流名称
name: release-please

# 定义工作流中的各个任务
jobs:
  # 任务名称：release-please
  release-please:
    # 运行环境：Ubuntu 最新版本
    runs-on: ubuntu-latest

    # 定义任务中的各个步骤
    steps:
      # 步骤：使用 Google 的 release-please-action 动作
      - name: Create Release
        uses: google-github-actions/release-please-action@v3
        # 为这个步骤指定一个标识符，方便后续引用
        id: release-please
        with:
          # 指定发布类型为 Node.js 项目
          release-type: node
          # 指定要发布的包名
          package-name: 'kkkkkk-10086'
          # 指定默认分支名称
          default-branch: master

      # 步骤：将CHANGELOG.md推送到docs分支的timeline.md
      - name: Git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Push CHANGELOG to docs/timeline.md
        run: |
          # 使用GITHUB_REPOSITORY获取仓库的所有者和名称
          REPO_PATH=$(echo $GITHUB_REPOSITORY | awk -F'/' '{print $2}')
          OWNER=$(echo $GITHUB_REPOSITORY | awk -F'/' '{print $1}')
          # 克隆仓库到临时目录
          git clone https://github.com/$OWNER/$REPO_PATH.git /tmp/repo --branch master --single-branch --quiet
          # 切换到docs分支
          cd /tmp/repo
          git checkout docs
          # 将master分支的CHANGELOG.md内容复制到docs分支的docs/timeline.md
          cp /tmp/repo/CHANGELOG.md /tmp/repo/docs/timeline.md
          # 添加并提交更改
          git add docs/timeline.md
          git commit -m "Sync CHANGELOG.md to docs/timeline.md"
          # 推送更改到远程仓库的docs分支
          git push --force origin docs

        if: github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}